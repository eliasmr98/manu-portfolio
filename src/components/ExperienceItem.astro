---
interface Props {
  title: string;
  company: string;
  date: string;
  description: string;
  city: string;
  logo?: string;
  detailedDescription?: string;
  details?: { label: string; items: string[] }[];
}

const {
  title,
  date,
  description,
  city,
  company,
  logo,
  detailedDescription,
  details,
} = Astro.props;

const modalId = `${company.toLowerCase().replace(/\s+/g, "-")}-${title.toLowerCase().replace(/\s+/g, "-")}-modal`;

const openModal = `const el=document.getElementById('${modalId}'); el.classList.remove('hidden'); el.classList.add('flex');`;
const closeModal = `const el=document.getElementById('${modalId}'); el.classList.remove('flex'); el.classList.add('hidden');`;
---

<div
  class="absolute w-3 h-3 bg-pink-300 rounded-full mt-1.5 -start-1.5 border border-white"
>
</div>

<time class="mb-1 text-sm font-normal leading-none text-gray-500">{date}</time>

<div class="my-3 flex items-center space-x-3">
  {
    logo && (
      <img
        src={logo}
        alt={`${company} logo`}
        class="w-10 h-10 object-cover rounded-full"
      />
    )
  }
  <div>
    <h3 class="text-lg font-medium text-pink-400">{title}</h3>
    <p class="text-sm font-normal text-gray-800">
      {company}{city && `, ${city}`}
    </p>
  </div>
</div>

<p class="mb-4 text-base font-normal text-pretty text-gray-700">
  {description}
</p>

{
  details && details.length > 0 && (
    <div>
      <button
        type="button"
        class="cursor-pointer inline-flex items-center px-4 py-2 text-sm font-medium rounded-full text-gray-600 border border-pink-200 bg-pink-50 hover:bg-pink-100 hover:shadow-sm transition-all duration-300 ease-in-out"
        onclick={openModal}
      >
        Saber más...
        <svg
          class="w-3 h-3 ms-2 rtl:rotate-180"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 14 10"
        >
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M1 5h12m0 0L9 1m4 4L9 9"
          />
        </svg>
      </button>

      <div
        id={modalId}
        tabindex="-1"
        aria-hidden="true"
        class="hidden overflow-y-auto fixed inset-0 z-50 items-center justify-center bg-black/20 backdrop-blur-sm"
      >
        <div class="relative p-4 w-full max-w-2xl max-h-full">
          <div class="relative bg-white rounded-lg shadow">
            <div class="flex items-center justify-between p-4 border-b rounded-t border-gray-200">
              <h3 class="text-xl font-semibold text-gray-900">
                Más información - {company}
              </h3>
              <button
                type="button"
                class="cursor-pointer text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center"
                onclick={closeModal}
              >
                <svg
                  class="w-3 h-3"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 14 14"
                >
                  <path
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"
                  />
                </svg>
              </button>
            </div>
            <div class="p-4 space-y-4">
              <p class="text-base leading-relaxed text-gray-500">
                {detailedDescription ?? description}
              </p>
              {details.map(({ label, items }) => (
                <div>
                  <h4 class="text-lg font-semibold text-gray-900">{label}</h4>
                  <ul class="list-disc list-inside text-gray-700">
                    {items.map((item) => (
                      <li>{item}</li>
                    ))}
                  </ul>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}
